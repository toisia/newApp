{"version":3,"sources":["components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/SideBar/SideBar.module.css","components/Preloader/Preloader.module.css","components/Profile/MyPosts/Post/Post.module.css","reportWebVitals.js","Api/Api.js","Redux/profilePageReducer.js","Redux/authReducer.js","components/Users/usersObjectHelper.js","Redux/usersReducer.js","Redux/appReducer.js","Redux/reduxStore.js","components/Header/Header.jsx","components/SideBar/SideBar.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","components/Login/Login.jsx","components/Friends/FriendsItem/FriendsPost/FriendsPost.jsx","components/Friends/FriendsItem/FriendsItem.jsx","components/Friends/Friends.jsx","assets/images/profileIcon.png","components/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/Preloader/Preloader.jsx","Redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/HeaderContainer.jsx","App.js","hoc/withSuspense.js","index.js","components/Login/Login.module.css","components/Paginator/Paginator.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/Friends/FriendsItem/FriendsPost/FriendsPost.module.css","components/Profile/MyPosts/MyPosts.module.css","hoc/withAuthRedirect.js","Redux/dialoguesPageReducer.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","withCredentials","baseURL","headers","userAPI","requestUsers","currentPage","pageSize","get","response","data","Unfollow","id","delete","Follow","post","profileAPI","userId","statusText","put","status","authAPI","email","password","rememberMe","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","message","likesCount","profile","setStatus","type","profilePageReducer","state","action","newPost","filter","p","postId","SET_USER_DATA","inialState","login","isAuth","isFetching","setAuthUserData","authorize","dispatch","a","resultCode","authReducer","updateObjectsInArray","items","itemsId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","FOLLOWING_IN_PROGRESS","users","totalUsersCount","followingInProgress","confirmFollow","confirmUnfollow","setCurrentPage","toggleIsFetching","followingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","INITIALIZED","initialized","appReducer","redusers","combineReducers","profilePage","dialoguesPage","dialoguesPageReducer","usersPage","auth","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Header","props","className","classes","header","src","loginBlock","onClick","logout","to","SideBar","nav","item","activeClassName","active","friends","Settings","fond","Music","validationSchema","Yup","max","min","required","initialValues","toggle","LoginForm","onSubmit","values","onSubmitProps","console","log","setSubmitting","formik","error","form","htmlFor","field","name","placeholder","errorMessage","checkbox","button","disabled","isValid","isSubmitting","connect","messages","FriendsPost","bar","FriendsItem","friendsElements","friend","postsBlock","friendsPosts","Friends","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","cn","selectedPage","pageNumber","e","User","user","photos","small","profileIcon","userImage","some","unfollow","follow","Users","Preloader","preloader","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","this","React","Component","bind","page","totalCount","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","currentTarget","value","ProfileInfo","fullName","ava","large","aboutMe","contacts","facebook","vk","twitter","instagram","github","Post","likeAmount","AddPostForm","addPost","resetForm","as","MyPosts","memo","postsElements","likeCount","MyPostsContainer","Profile","ProfileContainer","match","params","authorizedUserId","history","getProfile","getStatus","withRouter","HeaderContainer","News","lazy","DialoguesContainer","MainApp","initializeApp","path","render","Suspense","fallback","UsersContainer","friendsSideBar","AppContainer","App","ReactDOM","document","getElementById","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","ADD_MESSAGE","dialogues","addMessageActionCreator","newMessage"],"mappings":"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","file":"static/js/main.3ee17ce1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fond\":\"ProfileStatus_fond__3KD84\",\"ava\":\"ProfileStatus_ava__GYhP9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"SideBar_nav__3PH1W\",\"item\":\"SideBar_item__1AqsX\",\"active\":\"SideBar_active__Wg4nz\",\"friends\":\"SideBar_friends__18F83\",\"friendsPics\":\"SideBar_friendsPics__C_Lwv\",\"friendsPic\":\"SideBar_friendsPic__2o7sf\",\"friendsName\":\"SideBar_friendsName__2V8ZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3TICT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2r5vl\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create ({\r\n    withCredentials: true,\r\n    baseURL:  `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers:  {\"API-KEY\":\"5d232cb4-0850-4256-adb1-9708e7bf1721\"}\r\n})\r\n\r\n\r\nexport const userAPI = {\r\n    requestUsers (currentPage =1,pageSize=10 ) {\r\n        return instance\r\n                .get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then (response => response.data);\r\n        },\r\n        \r\n    Unfollow (id){\r\n            return instance.\r\n            delete(\r\n                `follow/${id}`)\r\n                .then (response => response.data);\r\n            },\r\n    Follow (id){\r\n                return instance.\r\n                post(\r\n                    `follow/${id}`)\r\n                    .then (response => response.data);\r\n                }\r\n}\r\nexport const profileAPI = {\r\n    getProfile (userId ) {\r\n        return instance\r\n                .get(`profile/` + userId)\r\n                .then (response => response.data);\r\n        },\r\n    getStatus (userId ) {\r\n        return instance\r\n                .get(`profile/status/` + userId)\r\n                .then (response => response.data);\r\n        },\r\n    updateStatus (statusText ) {\r\n        return instance\r\n                .put(`profile/status`, {status: statusText})\r\n                .then (response => response.data);\r\n        }\r\n    }\r\n \r\nexport const authAPI = {\r\n    getAuth () {\r\n        return instance\r\n                .get(`auth/me/`)\r\n                .then (response => response.data);\r\n        },\r\n    login (email, password, rememberMe = false) {\r\n        return instance\r\n                .post(`/auth/login`, {email, password, rememberMe})\r\n                .then (response => response.data);\r\n        },\r\n    logout () {\r\n        return instance\r\n                .delete(`/auth/login`)\r\n                .then (response => response.data);\r\n        }}\r\n\r\n        // axios\r\n        // .get(\r\n        //   `https://social-network.samuraijs.com/api/1.0/profile/` + userId\r\n        // )\r\n\r\n\r\n// export  default userAPI;\r\n// export const  getUsers = (currentPage =1,pageSize=10 )=> {\r\n// return instance\r\n//         .get(`users?page=${currentPage}&count=${pageSize}`)\r\n//         .then (response => response.data);\r\n// };\r\n\r\n\r\n// export const  Unfollow = (id)=> {\r\n// return instance.\r\n// delete(\r\n//     `follow/${id}`)\r\n//     .then (response => response.data);\r\n// };\r\n\r\n// export const  Follow = (id)=> {\r\n// return instance.\r\n// post(\r\n//     `follow/${id}`,{})\r\n//     .then (response => response.data);\r\n// };\r\n","import { profileAPI } from \"../Api/Api\";\r\n\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n// const UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hi it's my first post!\", likesCount: 12 },\r\n    { id: 2, message: \"A longread about my summer trip\", likesCount: 12 },\r\n    { id: 3, message: \"Hello there!\", likesCount: 12 },\r\n  ],\r\n  // newPostText: \"kitty\",\r\nprofile: null,\r\nstatus: \" \"\r\n  };\r\n   \r\nconst profilePageReducer = (state = initialState, action) => {\r\n  \r\n  switch (action.type) {\r\n    \r\n    case ADD_POST:{\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPost,\r\n        likesCount: 23,\r\n      };\r\nreturn{\r\n  ...state,\r\n  posts:[...state.posts, newPost],\r\n  // newPostText: \" \",\r\n}}\r\ncase DELETE_POST:{\r\n  return {...state,\r\n    posts:state.posts.filter(p=>p.id!=action.postId)\r\n  }}\r\n\r\n\r\n// let stateCopy = {...state};\r\n// stateCopy.posts = [...state.posts];\r\n// stateCopy.posts.push (newPost);\r\n// stateCopy.newPostText = \" \";\r\n// return stateCopy;}\r\n      // state.posts.push(newPost);\r\n      // state.newPostText = \" \";\r\n      // return state;\r\n    // case UPDATE_NEW_POST_TEXT:{\r\n    //   return {...state,\r\n    //     newPostText: action.newText\r\n    //   }}\r\n    case SET_STATUS:{\r\n      return {...state,\r\n        status: action.status\r\n      }}\r\n    case SET_USER_PROFILE:{\r\n      return {...state,\r\n        profile: action.profile\r\n      }\r\n      \r\n    }\r\n    default:\r\n      return state;\r\n  \r\n    }};\r\n\r\n    export const addPost = (newPost) => ({type: ADD_POST, newPost})\r\n    export const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\n    // export const updateNewPostTextActionCreator = (text) => ({\r\n    // type:UPDATE_NEW_POST_TEXT, newText:text});\r\n    export const setUserProfile= (profile) => ({ type: SET_USER_PROFILE, profile});\r\n    export const setStatus= (status) => ({ type: SET_STATUS, status});\r\n\r\n \r\n \r\n\r\n  \r\n    export const getProfile= (userId)=>async (dispatch)=>{\r\n    let data = await profileAPI.getProfile(userId)\r\n          dispatch(setUserProfile(data));\r\n   }\r\n\r\n    export const getStatus= (userId)=>async (dispatch)=>{\r\n    let data= await profileAPI.getStatus(userId);\r\n      dispatch(setStatus(data));\r\n   }\r\n\r\n    export const updateStatus= (status)=>async (dispatch)=>{\r\n      let data= await profileAPI.updateStatus(status);\r\n      if(data.resultCode===0){\r\n        dispatch(setStatus(status));\r\n      } \r\n    }\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\nexport default profilePageReducer;\r\n","import { authAPI } from \"../Api/Api\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\nconst SET_ERROR = \"SET_ERROR\";\r\n\r\nlet inialState = {\r\n  userId : null,\r\n  email:null,\r\n  login: null,\r\n  isAuth: false,\r\n  isFetching: true,  \r\n  \r\n};\r\n\r\nconst authReducer = (state = inialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n        // isAuth: true\r\n              };\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n \r\nexport const setAuthUserData = (userId,login,email,isAuth) => ({type: SET_USER_DATA, data:{userId,email,login,isAuth}})\r\n\r\n\r\n\r\nexport const authorize =()=> async (dispatch)=>{\r\n   let data= await authAPI.getAuth();\r\n      if (data.resultCode === 0){\r\n      let {id,login,email} = data.data;\r\n      dispatch(setAuthUserData(id,login,email , true))}}\r\n\r\nexport const login =(email, password, rememberMe )=>async (dispatch)=>{\r\n    let data  = await authAPI.login(email, password, rememberMe)\r\n       dispatch(authorize())\r\n  }\r\n\r\nexport const logout =()=> async(dispatch)=>{\r\n  let data  = await authAPI.logout()\r\n    dispatch(setAuthUserData(null,null,null , false))\r\n  }\r\n \r\n\r\nexport default authReducer;\r\n\r\n\r\n","\r\n\r\nexport const  updateObjectsInArray = (items,itemsId, objPropName, newObjProps )=>{\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemsId) {\r\n          return { ...u, ...newObjProps };\r\n        }\r\n        return u;\r\n    })}\r\n\r\n","import { StaticRouter } from \"react-router-dom\";\r\nimport {updateObjectsInArray} from \"./../components/Users/usersObjectHelper\"\r\nimport { userAPI } from \"../Api/Api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst FOLLOWING_IN_PROGRESS = \"FOLLOWING_IN_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectsInArray (state.users,action.userId, \"id\", {followed: true})\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectsInArray (state.users,action.userId, \"id\", {followed: false})\r\n          };\r\n          \r\n    // case FOLLOW:\r\n    //   return {\r\n    //     ...state,\r\n    //     users: state.users.map((u) => {\r\n    //       if (u.id === action.userId) {\r\n    //         return { ...u, followed: true };\r\n    //       }\r\n    //       return u;\r\n    //     }),\r\n    //   };\r\n    // case UNFOLLOW:\r\n    //   return {\r\n    //     ...state,\r\n    //     users: state.users.map((u) => {\r\n    //       if (u.id === action.userId) {\r\n    //         return { ...u, followed: false };\r\n    //       }\r\n    //       return u;\r\n    //     }),\r\n    //   };\r\n    case SET_USERS: {\r\n      return { ...state, users: [...action.users] };\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.count };\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    case FOLLOWING_IN_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id != action.userId),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const confirmFollow = (userId) => ({ type: FOLLOW, userId });\r\nexport const confirmUnfollow = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalUsersCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\nexport const followingProgress = (isFetching, userId) => ({\r\n  type: FOLLOWING_IN_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(setCurrentPage(page));\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    let data = await userAPI.requestUsers(page, pageSize)\r\n      dispatch(toggleIsFetching(false));\r\n      dispatch(setUsers(data.items));\r\n      dispatch(setTotalUsersCount(data.totalCount));\r\n  };\r\n};\r\n\r\nlet followUnfollowFlow = async (dispatch, userId, apiMethod,actionCreator)=> {\r\n  dispatch(followingProgress(true, userId));\r\n  let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n      dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(followingProgress(false, userId));\r\n}\r\n\r\n\r\n\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n   let apiMethod =  userAPI.Follow.bind(userAPI)\r\n   followUnfollowFlow(dispatch, userId, apiMethod,confirmFollow)\r\n      }\r\n    \r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  let apiMethod =  userAPI.Unfollow.bind(userAPI);\r\n  followUnfollowFlow(dispatch, userId, apiMethod,confirmUnfollow)\r\n      }\r\n\r\n\r\n\r\n\r\nexport default usersReducer;\r\n","import { authAPI } from \"../Api/Api\";\r\nimport { authorize } from \"./authReducer\";\r\n\r\nconst INITIALIZED = \"INITIALIZED\";\r\n\r\nlet inialState = {\r\n  initialized : false,\r\n};\r\n\r\nconst appReducer = (state = inialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED: {\r\n      return {\r\n        ...state,\r\n       initialized: true\r\n              };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n \r\nexport const ininalizationCompleted = () => ({type: INITIALIZED})\r\n\r\n\r\n\r\nexport const initializeApp =()=>(dispatch)=>{\r\n  let promise = dispatch(authorize ());\r\n  promise.then(() =>{\r\n    dispatch(ininalizationCompleted())})}\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer;\r\n\r\n\r\n","// const { createStore, combineReducers } = require(\"redux\");\r\nimport profilePageReducer from \"./profilePageReducer\"\r\nimport dialoguesPageReducer from \"./dialoguesPageReducer\"\r\nimport authReducer from \"./authReducer\"\r\nimport usersReducer from \"./usersReducer\"\r\nimport {createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet redusers = combineReducers({\r\n    profilePage:profilePageReducer,\r\n    dialoguesPage:dialoguesPageReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app:appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers(  applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return <header className={classes.header}>\r\n        <img src=\"https://c7.hotpng.com/preview/471/689/68/logo-flower-royalty-free-flower.jpg\"></img>\r\n\r\n<div className={classes.loginBlock}>\r\n  {props.isAuth \r\n  ? <div>\r\n    {props.login}  <button onClick={props.logout}>Log out</button>\r\n\r\n  </div>\r\n:<NavLink to={'/login'}>Login</NavLink>}\r\n</div>\r\n\r\n\r\n      </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./SideBar.module.css\";\r\n\r\nconst SideBar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/profile\" activeClassName={classes.active}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/dialogues\" activeClassName={classes.active}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/users\" activeClassName={classes.active}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/news\" activeClassName={classes.active}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/music\" activeClassName={classes.active}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <br></br>\r\n      <div className={`${classes.item} ${classes.active}`}>\r\n        {/* Esli bolshe odnogo klassa to konkotinacija strok */}\r\n        <NavLink to=\"/settings\" activeClassName={classes.active}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${classes.item} ${classes.friends} ${classes.active}`}>\r\n        <NavLink to=\"/friends\" activeClassName={classes.active}>\r\n          Friends\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/myfriends\" activeClassName={classes.active}>\r\n          My Friends\r\n        </NavLink>\r\n      </div>\r\n     \r\n    </nav>\r\n  );\r\n};\r\nexport default SideBar;\r\n","import React from 'react';\r\n\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return <div >\r\n    <div className={classes.fond}>\r\n      \r\n    Settings\r\n    \r\n  </div>\r\n  </div>\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\n\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return <div >\r\n    <div className={classes.fond}>\r\n      \r\n    Music\r\n    \r\n  </div>\r\n  </div>\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport classes from './Login.module.css';\r\nimport {login, setError} from \"../../Redux/authReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n  \r\n  // const validate = values => {\r\n  //   const errors = {};\r\n  //   if (!values.login) {\r\n  //     errors.login = 'Required';\r\n  //   } else if (values.login.length > 15) {\r\n  //     errors.login = 'Must be 15 characters or less';\r\n  //   }\r\n  \r\n  //   if (!values.password) {\r\n  //     errors.password = 'Required';\r\n  //   } else if (values.password.length > 20) {\r\n  //     errors.password = 'Must be 20 characters or less';\r\n  //   }\r\n  \r\n  //   return errors;\r\n  // };  \r\n  \r\n   const validationSchema = Yup.object({\r\n     email:Yup.string()\r\n     .max(30, 'Must be 30 characters or less')\r\n     .min(2, 'Must be more than 2 characters ')\r\n     .required(\"Required\"),\r\n     password:Yup.string()\r\n     .max(15, 'Must be 15 characters or less')\r\n     .min(2, 'Must be more than 2 characters ')\r\n     .required(\"Required\"),\r\n   }) \r\n  const initialValues= {\r\n    \r\n            email: '',\r\n            password: '',\r\n            toggle: false,\r\n            \r\n            };\r\n \r\n  // const  onSubmit= (values, onSubmitProps) => {\r\n  //   console.log(values.email, values.password,values.toggle)\r\n  //   login(values.email, values.password,values.toggle)\r\n  // // console.log(\"submit props\", onSubmitProps)\r\n  // // console.log(\"toggle status\", values.toggle)\r\n  \r\n  // // console.log(\"checked props\", checked)\r\n  // onSubmitProps.setSubmitting(false)\r\n  // } \r\n    \r\n//  const Error = (meta)=>{\r\n//    return(\r\n//      <div className={classes.errorMessage}>\r\n      \r\n//      </div>\r\n//    )  \r\n//  }\r\n  // const  onSubmit= values => {\r\n  //   console.log(values) }        \r\n\r\n  export const LoginForm = (props) => {\r\n    \r\n    return (\r\n      <Formik\r\n      \r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, onSubmitProps) => {\r\n          // actions.setStatus(undefined);\r\n          // console.log(values.email, values.password,values.toggle)\r\n          props.login(values.email, values.password,values.toggle)\r\n        console.log(\"submit props\", onSubmitProps)\r\n        console.log(\"value props\", values)\r\n        // console.log(\"toggle status\", values.toggle)\r\n        \r\n        onSubmitProps.setSubmitting(false)\r\n        } }\r\n\r\n        // onSubmit={onSubmit}\r\n        >\r\n        \r\n          {\r\n          formik=> {\r\n            console.log(\"Formik props\", formik.error)\r\n            return(\r\n\r\n      <Form className={classes.form}>\r\n        <div>\r\n        <label htmlFor=\"email\"></label>\r\n        <Field\r\n        className={classes.field}\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder={\"E-Mail\"}\r\n                 />\r\n                 <span  className={classes.errorMessage} >\r\n\r\n        <ErrorMessage  name=\"email\"/>\r\n                 </span>\r\n       \r\n        </div>\r\n        <div>\r\n\r\n        <label htmlFor=\"password\"></label>\r\n        <Field\r\n        className={classes.field}\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"text\"\r\n          placeholder={\"Password\"}\r\n                   />\r\n                   <span>\r\n\r\n        <ErrorMessage \r\n        // render={message => <div style={{color: 'red'}}></div>}\r\n        // render={() => <div>{props.errors.password}</div>}\r\n          // component={Error} \r\n        className={classes.errorMessage} \r\n        name=\"password\"/>\r\n                   </span>\r\n        \r\n          </div>\r\n          <div>\r\n          <Field \r\n        className={classes.checkbox}\r\n          type=\"checkbox\" name=\"toggle\" />\r\n          <label htmlFor=\"checkbox\">{\"remember me\"}</label>\r\n          </div>\r\n         \r\n        <div>\r\n        <button className={classes.button} type=\"submit\" disabled={!formik.isValid || formik.isSubmitting}>Login</button>\r\n        </div>\r\n        {/* {status && status.email ? (\r\n            <div>API Error: {status.email}</div>\r\n          ) : (\r\n            errors.email && <div>Validation Error: {errors.email}</div>\r\n          )}\r\n\r\n          {status && status.password ? (\r\n            <div>API Error: {status.password}</div>\r\n          ) : (\r\n            errors.password && <div>Validation Error: {errors.password}</div>\r\n          )} */}\r\n       </Form>\r\n        )}}\r\n      </Formik>\r\n    );\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n \r\n  \r\n          const Login = (props) => {\r\n           if (props.isAuth){\r\n             return <Redirect to ={\"/profile\"}/>\r\n           }\r\n           \r\n           \r\n           return <div >\r\n            <h1>Login</h1>\r\n            <LoginForm login={props.login} />\r\n           \r\n            \r\n            </div>\r\n            }      \r\n\r\n\r\n        let    MapStateToProps=(state)=>{\r\n          return {\r\n          isAuth:state.auth.isAuth,\r\n          messages:state.auth.messages\r\n \r\n        }}\r\n\r\nexport default connect(MapStateToProps,{login})(Login)\r\n","import React from \"react\";\r\nimport classes from \"./FriendsPost.module.css\";\r\n\r\nconst FriendsPost = (props) => {\r\n  return (\r\n    <div className={classes.bar}>\r\n      <div className={classes.item}>\r\n        <div>\r\n          <img src=\"https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg\"></img>\r\n        </div>\r\n        <div>{props.name}</div>\r\n      </div>\r\n      {/* <div><span>{props.likeAmount}</span></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendsPost;\r\n","import React from \"react\";\r\nimport classes from \"./FriendsItem.module.css\";\r\nimport FriendsPost from \"./FriendsPost/FriendsPost\";\r\n\r\nconst FriendsItem = (props) => {\r\n  \r\n  let friendsElements = props.friends.map((friend) => (\r\n    <FriendsPost name={friend.name} />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <h3>Friends- FriendsItem</h3>\r\n      <div className={classes.postsBlock}>\r\n        \r\n        \r\n      </div>\r\n      <div className={classes.friendsPosts}>{friendsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendsItem;\r\n","import React from \"react\";\r\nimport FriendsItem from \"./FriendsItem/FriendsItem\";\r\n\r\n// import classes from \"./Friends.module.css\";\r\n\r\nconst Friends = (props) => {\r\n  \r\n  return (\r\n    <div>\r\n      Friends\r\n      <FriendsItem friends={props.friends} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Friends;","export default __webpack_public_path__ + \"static/media/profileIcon.3b98e9c3.png\";","import React, { useState } from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\nimport cn from \"classnames\"\r\n\r\nlet Paginator = ({\r\n  currentPage,\r\n  totalUsersCount,\r\n  pageSize,\r\n  onPageChanged,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={classes.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          PREV\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={cn(\r\n                {\r\n                  [classes.selectedPage]: currentPage === p,\r\n                },\r\n                classes.pageNumber\r\n              )}\r\n              key={p}\r\n              onClick={(e) => {\r\n                onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n{\r\n  /* \r\n\r\n              className={props.currentPage === p && classes.selectedPage}\r\n              onClick={(event) => {\r\n                props.onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n        </div> */\r\n}\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport profileIcon from \"../../assets/images/profileIcon.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, ...props}) => {\r\n  return (\r\n    <div>\r\n      \r\n        <div>\r\n          <span>\r\n            <div>\r\n              <NavLink to={\"/profile/\" + user.id}>\r\n                <img\r\n                  src={user.photos.small != null ? user.photos.small : profileIcon}\r\n                  className={classes.userImage}\r\n                />\r\n              </NavLink>\r\n            </div>\r\n\r\n            <div>\r\n              {user.followed ? (\r\n                <button\r\n                  disabled={props.followingInProgress.some((id) => id === user.id)}\r\n                  onClick={() => {\r\n                    props.unfollow(user.id);\r\n\r\n                  }}\r\n                >\r\n                  Unfollow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  disabled={props.followingInProgress.some((id) => id === user.id)}\r\n                  onClick={() => {\r\n                    props.follow(user.id);\r\n                    \r\n                  }}\r\n                >\r\n                  Follow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <span>\r\n              <div>{user.name}</div>\r\n              <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n              <div>{\"location country\"}</div>\r\n              <div>{\"location city\"}</div>\r\n            </span>\r\n          </span>\r\n        </div>\r\n    </div>\r\n      )\r\n}\r\n\r\n \r\nexport  default User\r\n","import React from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport profileIcon from \"../../assets/images/profileIcon.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Paginator from \"../Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = (props) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Paginator\r\n          currentPage={props.currentPage}\r\n          totalUsersCount={props.totalUsersCount}\r\n          pageSize={props.pageSize}\r\n          onPageChanged={props.onPageChanged}\r\n        />\r\n      </div>\r\n\r\n      {/* <button onClick={getUsers}>Get users</button> */}\r\n\r\n      {props.users.map((u) => (\r\n        <div>\r\n          <User\r\n           user={u}\r\n            key={u.id} \r\n           {...props} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n\r\n{\r\n  // <div key={u.id}>\r\n  //   <span>\r\n  //     <div>\r\n  //       <NavLink to={\"/profile/\" + u.id}>\r\n  //         <img\r\n  //           src={u.photos.small != null ? u.photos.small : profileIcon}\r\n  //           className={classes.userImage}\r\n  //         />\r\n  //       </NavLink>\r\n  //     </div>\r\n  //     <div>\r\n  //       {u.followed ? (\r\n  //         <button\r\n  //           disabled={props.followingInProgress.some((id) => id === u.id)}\r\n  //           onClick={() => {\r\n  //             props.unfollow(u.id);\r\n  // props.followingProgress(true, u.id);\r\n  // userAPI.Unfollow(u.id).then((data) => {\r\n  //   if (data.resultCode === 0) {\r\n  //     props.unfollow(u.id);\r\n  //   }\r\n  //   props.followingProgress(false,u.id);\r\n  // axios.delete(\r\n  //   `https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,\r\n  //   { withCredentials: true,\r\n  //     headers:{\r\n  //      \"API-KEY\":\"5d232cb4-0850-4256-adb1-9708e7bf1721\"\r\n  //     } }\r\n  // ).then((response) => {\r\n  //   if (response.data.resultCode === 0) {\r\n  //     props.unfollow(u.id);\r\n  //   }\r\n  // });\r\n  //     }}\r\n  //   >\r\n  //     Unfollow\r\n  //   </button>\r\n  // ) : (\r\n  //   <button\r\n  //     disabled={props.followingInProgress.some((id) => id === u.id)}\r\n  //     onClick={() => {\r\n  //       props.follow(u.id);\r\n  // props.followingProgress(true, u.id);\r\n  // userAPI.Follow(u.id).then((data) => {\r\n  //   if (data.resultCode === 0) {\r\n  //     props.follow(u.id);\r\n  //   }\r\n  //   props.followingProgress(false, u.id);\r\n  // axios.post(\r\n  //   `https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,\r\n  //   {},\r\n  //   { withCredentials: true,\r\n  //     headers:{\r\n  //       \"API-KEY\":\"5d232cb4-0850-4256-adb1-9708e7bf1721\"\r\n  //      }\r\n  //   }\r\n  // ).then((response) => {\r\n  //   if (response.data.resultCode === 0) {\r\n  //     props.follow(u.id);\r\n  //   }\r\n  // });\r\n  //     }}\r\n  //   >\r\n  //     Follow\r\n  //   </button>\r\n  // )}\r\n  /* </div>\r\n    </span> */\r\n}\r\n\r\n{\r\n  // props.setUsers([\r\n  //    id: 1,\r\n  //       photoUrl: 'https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png',\r\n  //       followed: false,\r\n  //       fullName: \"Dmitry\",\r\n  //       status: \"I am a boss\",\r\n  //       location: { city: \"Minsk\", country: \"Belarus\" },\r\n  //     },\r\n  //     { id: 2,\r\n  //       photoUrl: 'https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png',\r\n  //       followed: true,\r\n  //       fullName: \"Karina\",\r\n  //       status: \"Hello, World\",\r\n  //       location: { city: \"Moscow\", country: \"Russia\" },\r\n  //     },\r\n  //     { id: 3,\r\n  //       photoUrl: 'https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png',\r\n  //       followed: false,\r\n  //       fullName: \"Liza\",\r\n  //       status: \"Buzy with happiness\",\r\n  //       location: { city: \"Kiev\", country: \"Ukrain\" },\r\n  //     },\r\n  //     { id: 4,\r\n  //       photoUrl: 'https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png',\r\n  //       followed: false,\r\n  //       fullName: \"Arhip\",\r\n  //       status: \"Fly like a bird\",\r\n  //       location: { city: \"Warsaw\", country: \"Poland\" },\r\n  //     },\r\n  // ]\r\n  //     )\r\n  //   return (\r\n  //     <div>\r\n  //         <button onClick={getUsers}>Get users</button>\r\n  //       {props.users.map((u) => (\r\n  //         <div key={u.id}>\r\n  //           <span>\r\n  //             <div>\r\n  //               <img src={u.photos.small !=null ? u.photos.small:profileIcon } className={classes.userImage} />\r\n  //             </div>\r\n  //             <div>\r\n  //               {u.followed ? (\r\n  //                 <button\r\n  //                   onClick={() => {\r\n  //                     props.unfollow(u.id);\r\n  //                   }}\r\n  //                 >\r\n  //                   Unfollow\r\n  //                 </button>\r\n  //               ) : (\r\n  //                 <button\r\n  //                   onClick={() => {\r\n  //                     props.follow(u.id);\r\n  //                   }}\r\n  //                 >\r\n  //                   Follow\r\n  //                 </button>\r\n  //               )}\r\n  //             </div>\r\n  //           </span>\r\n  //           <span>\r\n  //             <span>\r\n  //               <div>{u.name}</div>\r\n  //               <div>{u.status}</div>\r\n  //             </span>\r\n  //             <span>\r\n  //               <div>{\"u.location.country\"}</div>\r\n  //               <div>{\"u.location.city\"}</div>\r\n  //             </span>\r\n  //           </span>\r\n  //         </div>\r\n  //       ))}\r\n  //     </div>\r\n  //   );}}\r\n  // }}\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Preloader.module.css\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n      <div className={classes.preloader}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n          \r\n    );\r\n  }\r\n\r\nexport default Preloader;\r\n","import {createSelector} from \"reselect\"\r\n\r\n\r\n\r\nexport const getUsers =(state)=>{\r\nreturn state.usersPage.users\r\n}\r\n\r\nexport const getPageSize =(state)=>{\r\nreturn state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount =(state)=>{\r\nreturn state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage =(state)=>{\r\nreturn state.usersPage.currentPage\r\n}\r\nexport const getIsFetching =(state)=>{\r\nreturn state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress =(state)=>{\r\nreturn state.usersPage.followingInProgress\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {  follow , unfollow, setCurrentPage , followingProgress,requestUsers } from \"../../Redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Preloader/Preloader\"\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { getUsers,getPageSize,getTotalUsersCount,getCurrentPage,getIsFetching,getFollowingInProgress, getUserSuper  } from \"../../Redux/usersSelectors\";\r\n\r\n \r\n\r\nclass UsersAPIComponent extends React.Component {\r\n  componentDidMount() {\r\n    let {currentPage,pageSize} = this.props;\r\n    this.props.requestUsers(currentPage,pageSize);\r\n  }\r\n    \r\n  //   this.props.toggleIsFetching(true);\r\n  //   userAPI.getUsers(this.props.currentPage,this.props.pageSize).then(\r\n  // (data) => {\r\n  //       this.props.toggleIsFetching(false);\r\n  //       this.props.setUsers(data.items);\r\n  //       this.props.setTotalUsersCount(data.totalCount);\r\n  //     });\r\n  \r\n\r\n  onPageChanged = (pageNumber) => {\r\n    let {pageSize} = this.props;\r\n      this.props.requestUsers(pageNumber,pageSize);}\r\n\r\n\r\n\r\n    // this.props.setCurrentPage(pageNumber);\r\n    // this.props.toggleIsFetching(true);\r\n\r\n    // userAPI.getUsers(pageNumber,this.props.pageSize)\r\n    //     .then((data) => {\r\n    //     this.props.toggleIsFetching(false);\r\n    //     this.props.setUsers(data.items);\r\n    //   });\r\n  \r\n  \r\n\r\n  render() {\r\n    return <>\r\n    \r\n     {this.props.isFetching ? <Preloader/> : null}\r\n    <Users \r\n       totalUsersCount = {this.props.totalUsersCount} \r\n       pageSize = {this.props.pageSize} \r\n       currentPage = {this.props.currentPage} \r\n       onPageChanged={this.onPageChanged} \r\n       users = {this.props.users} \r\n       follow={this.props.follow} \r\n       unfollow={this.props.unfollow }\r\n       followingProgress={this.props.followingProgress}\r\n       followingInProgress={this.props.followingInProgress}\r\n       />\r\n    </>\r\n      }\r\n  \r\n     \r\n    } \r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    // users: getUserSuper(state),\r\n    users: getUsers(state),\r\n    pageSize: getPageSize (state),\r\n    totalUsersCount:  getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress:getFollowingInProgress(state),\r\n  };\r\n}\r\n// let mapStateToProps = (state) => {\r\n//   return {\r\n//     users: state.usersPage.users,\r\n//     pageSize: state.usersPage.pageSize,\r\n//     totalUsersCount: state.usersPage.totalUsersCount,\r\n//     currentPage: state.usersPage.currentPage,\r\n//     isFetching: state.usersPage.isFetching,\r\n//     followingInProgress:state.usersPage.followingInProgress,\r\n//   };\r\n// }\r\n\r\nexport default compose(\r\n  // withAuthRedirect,\r\n  connect(mapStateToProps, {unfollow,follow , setCurrentPage,\r\n    followingProgress , requestUsers}) )\r\n(UsersAPIComponent)\r\n\r\n// export default connect(mapStateToProps, {unfollow,follow , setCurrentPage,\r\n//   followingProgress , getUsers})(UsersAPIComponent);\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     follow: (userId) => {\r\n//       dispatch(followAC(userId));\r\n//     },\r\n//     unfollow: (userId) => {\r\n//       dispatch(unfollowAC(userId));\r\n//     },\r\n//     setUsers: (users) => {\r\n//       dispatch(setUsersAC(users));\r\n//     },\r\n//     setCurrentPage: (pageNumber) => {\r\n//     dispatch(setCurrentPageAC(pageNumber));\r\n//     },\r\n//     setTotalUsersCount: (totalCount) => {\r\n//     dispatch(setTotalUsersCountAC(totalCount));\r\n//     },\r\n//     toggleIsFetching: (isFetching) => {\r\n//     dispatch(toggleIsFetchingAC(isFetching));\r\n//     },\r\n\r\n//   }\r\n// }\r\n","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./ProfileStatus.module.css\";\r\n\r\nconst  ProfileStatusWithHooks =(props)=> {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(()=>{\r\n    setStatus(props.status);\r\n  },[props.status]);\r\n\r\n const activateEditMode = () => {\r\n  setEditMode(true)\r\n  }; \r\n  \r\n \r\nconst deactivateEditMode = () => {\r\n  setEditMode(false);\r\n  props.updateStatus(status);\r\n};\r\n\r\nconst onStatusChange = (e) => {\r\n  setStatus( e.currentTarget.value);\r\n};\r\n\r\n    return (\r\n      \r\n        <div>\r\n          {!editMode && (\r\n            <div>\r\n              <span \r\n              onDoubleClick={activateEditMode}\r\n              >\r\n                {props.status || \"-----\"}\r\n              </span>\r\n            </div>\r\n          )}\r\n          {editMode && (\r\n            <div>\r\n              <input\r\n                autoFocus={true}\r\n                onBlur={deactivateEditMode}\r\n                onChange={onStatusChange}\r\n                value={status}\r\n              ></input>\r\n            </div>\r\n          )}\r\n        </div>\r\n    \r\n    );\r\n  }\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileStatus.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  // statusInputRef = React.createRef();\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  };\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n  onStatusChange = (e) => {\r\n    this.setState({ status: e.currentTarget.value });\r\n  };\r\ncomponentDidUpdate(prevProps , prevState){\r\n  if (prevProps.status !== this.props.status){\r\n    this.setState({\r\n      status: this.props.status\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.activateEditMode}>\r\n              {this.props.status || \"-----\"}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input\r\n              autoFocus={true}\r\n              onBlur={this.deactivateEditMode}\r\n              onChange={this.onStatusChange}\r\n              value={this.state.status}\r\n            ></input>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../Preloader/Preloader'\r\nimport profileIcon from \"../../../assets/images/profileIcon.png\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\"\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile){\r\n    return <Preloader/>\r\n  }\r\n  \r\n  return ( \r\n  <div>\r\n\r\n  <div className={classes.fond}>\r\n      <img src=\"https://image.freepik.com/free-photo/beautiful-colorful-flower-background-blur-horizontal-spring-concept-toning-selective-focus_1220-1345.jpg\"></img>\r\n  </div>\r\n<div>\r\n\r\n        <h2>{props.profile.fullName}</h2>\r\n</div>\r\n{/* <div>\r\n  <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n</div> */}\r\n<div>\r\n  <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n</div>\r\n  <div className={classes.ava}> \r\n  <img\r\n                  src={props.profile.photos.large != null ? props.profile.photos.large : profileIcon}\r\n                  className={classes.userImage}\r\n                />\r\n\r\n\r\n      {/* <img src={props.profile.photos.large}></img> */}\r\n      <div>{props.profile.aboutMe}</div>\r\n      {/* <img src=\"https://en.bcdn.biz/Images/2018/6/12/27565ee3-ffc0-4a4d-af63-ce8731b65f26.jpg\"></img> */}\r\n  </div>\r\n  <div>Contacts:</div>\r\n      <div>{props.profile.contacts.facebook}</div>\r\n      <div>{props.profile.contacts.vk}</div>\r\n      <div>{props.profile.contacts.twitter}</div>\r\n      <div>{props.profile.contacts.instagram}</div>\r\n      <div>{props.profile.contacts.github}</div>\r\n      \r\n\r\n  </div>\r\n \r\n  \r\n  \r\n  )\r\n};\r\n \r\n export default ProfileInfo","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  \r\n  return   <div>\r\n    \r\n  <div className={classes.item}>\r\n    <img src=\"https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg\"></img>\r\n    {props.message}\r\n    </div>\r\n    <div><span>{props.likeAmount}</span></div>\r\n  \r\n  \r\n  </div>\r\n};\r\n \r\n export default Post","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport classes from './AddPostForm.module.css';\r\n\r\n  \r\n  \r\n   const validationSchema = Yup.object({\r\n    newPost:Yup.string()\r\n     .max(50, 'Must be 50 characters or less')\r\n     .required(\"Required\"),\r\n    \r\n   }) \r\n  const initialValues= {\r\n    newPost: '',\r\n            };\r\n\r\n  // const  onSubmit= (values, onSubmitProps, props) => {\r\n  //   alert(values.newMessage)\r\n  //   props.sendMessage(values.newMessage);\r\n  //   console.log(values) \r\n  // console.log(\"submit props\", onSubmitProps)\r\n  \r\n  // onSubmitProps.setSubmitting(false)\r\n  // } \r\n  \r\n const AddPostForm = (props) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        \r\n\r\n        \r\n        onSubmit={(values, onSubmitProps) => {\r\n          // alert(values.newPost)\r\n          props.addPost(values.newPost);\r\n          console.log(values) \r\n          console.log(values.newPost) \r\n        console.log(\"submit props\", onSubmitProps)\r\n        \r\n        onSubmitProps.setSubmitting(false)\r\n        onSubmitProps.resetForm()\r\n        \r\n        }}>\r\n          \r\n        \r\n          {\r\n          formik=> {\r\n            console.log(\"Formik props\", formik)\r\n            return(\r\n\r\n      <Form>\r\n        <div>\r\n        <label htmlFor=\"newMessage\"></label>\r\n        <Field\r\n          id=\"post\"\r\n          name=\"newPost\"\r\n          type=\"text\"\r\n          as=\"textarea\"\r\n          placeholder={\"Enter new post test\"}\r\n                 />\r\n        <ErrorMessage  name=\"newPost\"/>\r\n         </div>\r\n        \r\n          \r\n        <div>\r\n        <button type=\"submit\" disabled={!formik.isValid || formik.isSubmitting}>Add post</button>\r\n        </div>\r\n       </Form>\r\n        )}}\r\n      </Formik>\r\n    );\r\n  };\r\n \r\nexport default AddPostForm\r\n\r\n","import React from \"react\";\r\n\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\r\n\r\nconst MyPosts =\r\n React.memo ((props) => {\r\n  console.log(\"render\")\r\n  \r\n  let postsElements = props.posts.map((post) => (\r\n    <Post message={post.message} likeCount={post.likesCount} key={post.id} />\r\n  ));\r\n  // let newPostElement = React.createRef();\r\n\r\n  // let onAddPost = () => {\r\n  //   props.addPost();\r\n  //   // props.dispatch(addPostActionCreator());\r\n  // };\r\n\r\n  // let onPostChange = () => {\r\n  //   let text = newPostElement.current.value;\r\n  //   props.updateNewPostText(text);\r\n  // let action = {type:\"UPDATE-NEW-POST-TEXT\", newText:text};\r\n  // let action = updateNewPostTextActionCreator(text);\r\n  // props.dispatch(action);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <h3>My posts</h3>\r\n      <div className={classes.postsBlock}>\r\n        <AddPostForm addPost={props.addPost} />\r\n\r\n        {/* <div>\r\n          <textarea\r\n            onChange={onPostChange}\r\n            ref={newPostElement}\r\n            value={props.newPostText}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button onClick={onAddPost}>Add post</button>\r\n        </div> */}\r\n      </div>\r\n      <div className={classes.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n}\r\n)\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addPost,\r\n  updateNewPostText,\r\n} from \"../../../Redux/profilePageReducer\";\r\n\r\n// import StoreContext from \"../../../StoreContext\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n// const MyPostsContainer = (props) => {\r\n// debugger;\r\n\r\n// let state = props.store.getState();\r\n\r\n// let addPost = () => {\r\n//   props.store.dispatch(addPost());\r\n// };\r\n\r\n// let onPostChange = (text) => {\r\n//   let action = updateNewPostText(text);\r\n//   props.store.dispatch(action);\r\n// };\r\n//   const MyPostsContainer = () => {\r\n//   return (\r\n//   <StoreContext.Consumer>\r\n//       { (store) => {\r\n//         let state = store.getState();\r\n//         let addPost = () => {\r\n//           store.dispatch(addPost());\r\n//         };\r\n\r\n//         let onPostChange = (text) => {\r\n//           let action = updateNewPostText(text);\r\n//           store.dispatch(action);\r\n//         };\r\n\r\n// return    <MyPosts\r\n//       updateNewPostText={onPostChange}\r\n//       addPost={addPost}\r\n//       posts={store.getState().profilePage.posts}\r\n//       newPostText={store.getState().profilePage.newPostText}/>\r\n//     }}\r\n//     </StoreContext.Consumer>\r\n//   )\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    // newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPost) => {\r\n      dispatch(addPost(newPost));\r\n    },\r\n    // updateNewPostText: (text) => {\r\n    //   dispatch(updateNewPostText(text));\r\n    // },\r\n  };\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n{\r\n  /* <MyPosts\r\nupdateNewPostText={onPostChange}\r\naddPost={addPost}\r\nposts={state.profilePage.posts}\r\nnewPostText={state.profilePage.newPostText}\r\n// dispatch={props.dispatch}\r\n/> */\r\n}\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport classes from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  // debugger;\r\n \r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status}\r\n      updateStatus =  {props.updateStatus}/>\r\n      <MyPostsContainer />\r\n\r\n      {/* <MyPostsContainer store={props.store} /> */}\r\n\r\n      {/* <MyPostsContainer\r\n        store={props.store}\r\n        posts={props.profiles}\r\n        dispatch={props.dispatch}\r\n        newPostText={props.newPostText}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../Redux/profilePageReducer\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n \r\nclass  ProfileContainer extends React.Component {\r\n  componentDidMount(){\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId){\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId){\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n\r\n    this.props.getProfile(userId);\r\n  this.props.getStatus(userId)\r\n    // axios\r\n    // .get(\r\n    //   `https://social-network.samuraijs.com/api/1.0/profile/` + userId\r\n    // )\r\n    // .then((data) => {\r\n    //   this.props.setUserProfile(data);\r\n    }\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n\r\n    \r\n      <Profile {...this.props} \r\n      // profile={this.props.profile}\r\n      // updateStatus =  {props.updateStatus}\r\n      />\r\n     )\r\n}};\r\n\r\n// let AuthRedirectComponent = withAuthRedirect (ProfileContainer);\r\n\r\n// let mapStateToPropsForRedirect = (state)=>({\r\n//   isAuth:state.auth.isAuth,\r\n// })\r\n\r\n// AuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)\r\n\r\n// let AuthRedirectComponent =(props)=>{\r\n//   if (!this.props.isAuth) return <Redirect to ={\"/login\"}/>;\r\n//   return <ProfileContainer props={...props}/>\r\n// }\r\n \r\nlet mapStateToProps = (state)=>({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.userId,\r\n\r\n})\r\n\r\nexport default compose (\r\n  connect(mapStateToProps,{ getProfile , getStatus, updateStatus}),\r\n  withRouter,\r\n  // withAuthRedirect \r\n)(ProfileContainer)\r\n\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n\r\n\r\n\r\n\r\n// export default connect (mapStateToProps,{ getProfile})(WithUrlDataContainerComponent)\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {logout} from \"../../Redux/authReducer\"\r\n\r\nclass  HeaderContainer extends React.Component{\r\n\r\n// componentDidMount(){\r\n//   this.props.authorize();\r\n  \r\n  // authAPI.getAuth()\r\n  // .then((data) => {\r\n  //   if (data.resultCode === 0){\r\n  //     let {id,login,email} = data.data;\r\n  //     this.props.setAuthUserData(id,login,email)\r\n    // }\r\n   \r\n  \r\n  // axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me` , { withCredentials : true})\r\n  // .then((response) => {\r\n  //   if (response.data.resultCode === 0){\r\n  //     let {id,login,email} = response.data.data;\r\n  //     this.props.setAuthUserData(id,login,email)\r\n  //   }\r\n   \r\n  // });\r\n\r\nrender(){\r\n  return <Header {...this.props}/>\r\n  }\r\n}\r\n\r\n \r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  };\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{ logout})(HeaderContainer);\r\n\r\n","import \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport SideBar from \"./components/SideBar/SideBar\";\n// import News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport Music from \"./components/Music/Music\";\nimport Login from \"./components/Login/Login\";\nimport Friends from \"./components/Friends/Friends\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n// import DialoguesContainer from \"./components/Dialogues/DialoguesContainer\";\n\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport {initializeApp} from \"./Redux/appReducer\";\nimport React from \"react\";\nimport { connect, Provider } from \"react-redux\";\nimport { withRouter,BrowserRouter,Route } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport store from \"./Redux/reduxStore\";\nimport { withSuspense } from \"./hoc/withSuspense\";\n\n\n\n\n\n\nconst News = React.lazy(() => import('./components/News/News'))\nconst DialoguesContainer = React.lazy(() => import('./components/Dialogues/DialoguesContainer'));\n\n\nclass MainApp extends React.Component  {\n  componentDidMount(){\n    this.props.initializeApp();\n  }\n  render(){\n    if (!this.props.initialized){\n      return <Preloader/>\n    }\n \n  return (\n    <div className=\"appWrapper\">\n      <HeaderContainer />\n      <SideBar />\n      <div className=\"appWrapperContent\">\n        <Route path=\"/dialogues\" render={withSuspense (DialoguesContainer)} />\n        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n        <Route path=\"/users\" render={() => <UsersContainer />} />\n\n\n        \n        {/* <Route path=\"/dialogues\" render={() => <DialoguesContainer store={props.store}/>} />\n          <Route path=\"/profile\" render={() => <Profile store={props.store}/>} /> */}\n\n        {/* <Route path=\"/dialogues\" render={() => <Dialogues dial={props.state.dialoguesPage} dispatch={props.dispatch} newMessageText={props.state.dialoguesPage.newMessageText}/>} /> */}\n        {/* <Route path=\"/profile\" render={() => <Profile profiles={props.state.profilePage.posts} dispatch={props.dispatch} newPostText={props.state.profilePage.newPostText}/>} /> */}\n        <Route path=\"/news\" render={() => {\n              return <React.Suspense fallback ={<div>Loading...</div>}>\n               <News/>\n               </React.Suspense>} \n        } />\n        <Route path=\"/music\" render={() => <Music />} />\n        <Route path=\"/login\" render={() => <Login />} />\n        <Route path=\"/settings\" render={() => <Settings />} />\n        <Route\n          path=\"/friends\"\n          render={() => (\n            <Friends friends={this.props.state.friendsSideBar.friends} />\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n};\n\nconst MapStateToProps = (state)=>({\n    initialized: state.app.initialized\n  }\n)\n\n let AppContainer =  compose (\nwithRouter ,\nconnect(MapStateToProps,{ initializeApp}))(MainApp)\n\nlet  App=(props)=>{\n  return  <BrowserRouter>\n  <Provider store ={store}>\n    <AppContainer />\n  </Provider>\n</BrowserRouter>\n}\nexport default App;","import React from \"react\";\r\nimport Preloader from \"../components/Preloader/Preloader\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n  \r\n      return (props)=>{\r\n        return <React.Suspense fallback ={<Preloader/>}>\r\n        <Component {...props}/>\r\n        </React.Suspense>\r\n      }\r\n    }\r\n \r\n ","import \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./Redux/reduxStore\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\n// let rerenderEntireTree = (state) => {\n  // debugger;\n  ReactDOM.render(\n   <App />\n     ,document.getElementById(\"root\"));\n     \n{\n// rerenderEntireTree(store.getState());\n\n// store.subscribe(() => {\n//   let state = store.getState();\n//   rerenderEntireTree(state);\n// });\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__3QTiU\",\"field\":\"Login_field__3bE_P\",\"errors\":\"Login_errors__shZvf\",\"errorMessage\":\"Login_errorMessage__mL7g2\",\"checkbox\":\"Login_checkbox__1AX0p\",\"button\":\"Login_button__OsSgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1-PLF\",\"pageNumber\":\"Paginator_pageNumber__11prI\",\"selectedPage\":\"Paginator_selectedPage__1NIxE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fond\":\"ProfileInfo_fond__5v_4D\",\"ava\":\"ProfileInfo_ava__1LO49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userImage\":\"Users_userImage__2QKyz\",\"selectedPage\":\"Users_selectedPage__2UBAT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__16xrX\",\"loginBlock\":\"Header_loginBlock__2Lu71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsPost_item__3uYLm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__15U9U\",\"posts\":\"MyPosts_posts__3c9yK\"};","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n ","const ADD_MESSAGE = \"ADD-MESSAGE\";\r\n// const UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\nlet inialState = {\r\n  messages: [\r\n    { id: 1, message: \"Hi! How are you?\" },\r\n    { id: 2, message: \"Hello There\" },\r\n    { id: 3, message: \"We are cool!\" },\r\n    { id: 4, message: \"Yo! How are you?\" },\r\n    { id: 5, message: \"There is an apple\" },\r\n    { id: 6, message: \"How are you?\" },\r\n  ],\r\n  // newMessageText: \" \",\r\n  dialogues: [\r\n    { id: 1, name: \"Dimych\" },\r\n    { id: 2, name: \"Andrey\" },\r\n    { id: 3, name: \"Sveta\" },\r\n    { id: 4, name: \"Sasha\" },\r\n    { id: 5, name: \"Viktor\" },\r\n    { id: 6, name: \"Valera\" },\r\n  ],\r\n};\r\n \r\nconst dialoguesPageReducer = (state = inialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE: {\r\n      let newMessage = {\r\n        id: 7,\r\n        message: action.newMessage,\r\n      };\r\n      // let stateCopy = { ...state };\r\n      // stateCopy.messages = [ ...state.messages ];\r\n\r\n      return {\r\n        ...state,\r\n        // newMessageText: \" \",\r\n        messages:[ ...state.messages, newMessage]\r\n      };\r\n    }\r\n      // stateCopy.messages.push(newMessage);\r\n      // stateCopy.newMessageText = \" \";\r\n      // return stateCopy;\r\n\r\n    // state.messages.push(newMessage);\r\n    // state.newMessageText = \" \";\r\n    // return state;\r\n    // case UPDATE_NEW_MESSAGE_TEXT: {\r\n    //   return { ...state,\r\n    //     newMessageText: action.newText,\r\n    //   };\r\n      // stateCopy.newMessageText = action.newText;\r\n      // return stateCopy;\r\n    // }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addMessageActionCreator = (newMessage) => ({type: ADD_MESSAGE, newMessage});\r\n// export const updateNewMessageTextActionCreator = (text) => ({\r\n//   type:UPDATE_NEW_MESSAGE_TEXT,\r\n//   newText:text})\r\n\r\nexport default dialoguesPageReducer;\r\n"],"sourceRoot":""}